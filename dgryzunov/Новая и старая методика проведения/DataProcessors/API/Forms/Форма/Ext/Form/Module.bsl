
&НаСервере
Процедура ПолучитьКурсыВалютНаСервере()
	
	Сервер = "api.coindesk.com";
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(Новый СертификатКлиентаWindows(), Новый СертификатыУдостоверяющихЦентровWindows());
	HTTPСоединение = Новый HTTPСоединение(Сервер,443,,,, 30, ЗащищенноеСоединение,);
	
	ЗаголовокЗапросаHTTP = Новый Соответствие();
	ЗаголовокЗапросаHTTP.Вставить("Content-Type", "application/json");
	HTTPЗапрос = Новый HTTPЗапрос("/v1/bpi/currentprice.json", ЗаголовокЗапросаHTTP);
	HTTPОтвет = HTTPСоединение.ВызватьHTTPМетод("GET", HTTPЗапрос);
	
	Если HTTPОтвет.КодСостояния >= 400 И HTTPОтвет.КодСостояния < 500 Тогда
		ОбщегоНазначения.СообщитьПользователю("Ошибка на стороне клиента! Код ошибки: " + HTTPОтвет.КодСостояния); 
	КонецЕсли;
	
	Если HTTPОтвет.КодСостояния >= 500 И HTTPОтвет.КодСостояния < 600 Тогда
		ОбщегоНазначения.СообщитьПользователю("Ошибка на стороне сервера! Код ошибки: " + HTTPОтвет.КодСостояния); 
	КонецЕсли;
	
	НаборЗаписейРегистра = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
	Структура = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Период = '00010101';
	
	Для Каждого Элемент из Структура Цикл
		Если Элемент.Ключ = "time" Тогда
			Для каждого ЗначениеПериода Из Элемент.Значение Цикл
				Если ЗначениеПериода.Ключ = "updatedISO" Тогда
					Период = ФорматироватьДату(ЗначениеПериода.Значение);
					Прервать;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
		Если Период <> '00010101' Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элемент из Структура Цикл
		Если Элемент.Ключ = "bpi" Тогда
			Для Каждого ЗначениеВалюты Из Элемент.Значение Цикл
				Для каждого Валюта Из ЗначениеВалюты.Значение Цикл 
					Если Валюта.Ключ = "code" Тогда
						НоваяЗаписьРегистра = НаборЗаписейРегистра.Добавить();
						НоваяЗаписьРегистра.Период = Период;
						НоваяЗаписьРегистра.Валюта = ПолучитьВалютуИзСправочника(Валюта.Значение);
						НоваяЗаписьРегистра.Кратность = 1;
					КонецЕсли;
					Если Валюта.Ключ = "rate" Тогда
						НоваяЗаписьРегистра.Курс = ФорматироватьКурс(Валюта.Значение);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	НаборЗаписейРегистра.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКурсыВалют(Команда)
	ПолучитьКурсыВалютНаСервере();
КонецПроцедуры 

Функция ФорматироватьДату(Дата)
	
	Год = Лев(Дата, 4);
	Месяц = Сред(Дата, 6, 2);
	День = Сред(Дата, 9, 2);
	
	Возврат Дата(Год, Месяц, День);
КонецФункции

Функция ПолучитьВалютуИзСправочника(Валюта);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Валюты.Ссылка КАК ВалютаИзСправочника
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|ГДЕ
	|	Валюты.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Валюта);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВалютаИзСправочника = ВыборкаДетальныеЗаписи.ВалютаИзСправочника;
	КонецЦикла;
	Возврат ВалютаИзСправочника
КонецФункции  

Функция ФорматироватьКурс(Курс)
	
	КурсВалюты = СтрЗаменить(Курс, ",", "");
	КурсВалюты = СтрЗаменить(КурсВалюты, ".", ",");
	Возврат Число(КурсВалюты);
КонецФункции 



